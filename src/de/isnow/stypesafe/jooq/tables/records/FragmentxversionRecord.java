/**
 * This class is generated by jOOQ
 */
package de.isnow.stypesafe.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.5.1"},
                            comments = "This class is generated by jOOQ")
public class FragmentxversionRecord extends org.jooq.impl.UpdatableRecordImpl<de.isnow.stypesafe.jooq.tables.records.FragmentxversionRecord> {

	private static final long serialVersionUID = 1212852021;

	/**
	 * The table column <code>stypesafe.fragmentXversion.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public void setId(org.jooq.tools.unsigned.UInteger value) {
		setValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.ID, value);
	}

	/**
	 * The table column <code>stypesafe.fragmentXversion.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public org.jooq.tools.unsigned.UInteger getId() {
		return getValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.ID);
	}

	/**
	 * The table column <code>stypesafe.fragmentXversion.fk_documentversion</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT version
	 * FOREIGN KEY (fk_documentversion)
	 * REFERENCES stypesafe.documentversion (id)
	 * </pre></code>
	 */
	public void setFkDocumentversion(org.jooq.tools.unsigned.UInteger value) {
		setValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_DOCUMENTVERSION, value);
	}

	/**
	 * The table column <code>stypesafe.fragmentXversion.fk_documentversion</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT version
	 * FOREIGN KEY (fk_documentversion)
	 * REFERENCES stypesafe.documentversion (id)
	 * </pre></code>
	 */
	public org.jooq.tools.unsigned.UInteger getFkDocumentversion() {
		return getValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_DOCUMENTVERSION);
	}

	/**
	 * Link this record to a given {@link de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord 
	 * DocumentversionRecord}
	 */
	public void setFkDocumentversion(de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord value) {
		if (value == null) {
			setValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_DOCUMENTVERSION, null);
		}
		else {
			setValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_DOCUMENTVERSION, value.getValue(de.isnow.stypesafe.jooq.tables.Documentversion.DOCUMENTVERSION.ID));
		}
	}

	/**
	 * The table column <code>stypesafe.fragmentXversion.fk_documentversion</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT version
	 * FOREIGN KEY (fk_documentversion)
	 * REFERENCES stypesafe.documentversion (id)
	 * </pre></code>
	 */
	public de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord fetchDocumentversion() {
		return create()
			.selectFrom(de.isnow.stypesafe.jooq.tables.Documentversion.DOCUMENTVERSION)
			.where(de.isnow.stypesafe.jooq.tables.Documentversion.DOCUMENTVERSION.ID.equal(getValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_DOCUMENTVERSION)))
			.fetchOne();
	}

	/**
	 * The table column <code>stypesafe.fragmentXversion.fk_documentfragment</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT fragment
	 * FOREIGN KEY (fk_documentfragment)
	 * REFERENCES stypesafe.documentfragment (id)
	 * </pre></code>
	 */
	public void setFkDocumentfragment(org.jooq.tools.unsigned.UInteger value) {
		setValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_DOCUMENTFRAGMENT, value);
	}

	/**
	 * The table column <code>stypesafe.fragmentXversion.fk_documentfragment</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT fragment
	 * FOREIGN KEY (fk_documentfragment)
	 * REFERENCES stypesafe.documentfragment (id)
	 * </pre></code>
	 */
	public org.jooq.tools.unsigned.UInteger getFkDocumentfragment() {
		return getValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_DOCUMENTFRAGMENT);
	}

	/**
	 * Link this record to a given {@link de.isnow.stypesafe.jooq.tables.records.DocumentfragmentRecord 
	 * DocumentfragmentRecord}
	 */
	public void setFkDocumentfragment(de.isnow.stypesafe.jooq.tables.records.DocumentfragmentRecord value) {
		if (value == null) {
			setValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_DOCUMENTFRAGMENT, null);
		}
		else {
			setValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_DOCUMENTFRAGMENT, value.getValue(de.isnow.stypesafe.jooq.tables.Documentfragment.DOCUMENTFRAGMENT.ID));
		}
	}

	/**
	 * The table column <code>stypesafe.fragmentXversion.fk_documentfragment</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT fragment
	 * FOREIGN KEY (fk_documentfragment)
	 * REFERENCES stypesafe.documentfragment (id)
	 * </pre></code>
	 */
	public de.isnow.stypesafe.jooq.tables.records.DocumentfragmentRecord fetchDocumentfragment() {
		return create()
			.selectFrom(de.isnow.stypesafe.jooq.tables.Documentfragment.DOCUMENTFRAGMENT)
			.where(de.isnow.stypesafe.jooq.tables.Documentfragment.DOCUMENTFRAGMENT.ID.equal(getValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_DOCUMENTFRAGMENT)))
			.fetchOne();
	}

	/**
	 * The table column <code>stypesafe.fragmentXversion.fk_author</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT author
	 * FOREIGN KEY (fk_author)
	 * REFERENCES stypesafe.author (id)
	 * </pre></code>
	 */
	public void setFkAuthor(org.jooq.tools.unsigned.UInteger value) {
		setValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_AUTHOR, value);
	}

	/**
	 * The table column <code>stypesafe.fragmentXversion.fk_author</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT author
	 * FOREIGN KEY (fk_author)
	 * REFERENCES stypesafe.author (id)
	 * </pre></code>
	 */
	public org.jooq.tools.unsigned.UInteger getFkAuthor() {
		return getValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_AUTHOR);
	}

	/**
	 * Link this record to a given {@link de.isnow.stypesafe.jooq.tables.records.AuthorRecord 
	 * AuthorRecord}
	 */
	public void setFkAuthor(de.isnow.stypesafe.jooq.tables.records.AuthorRecord value) {
		if (value == null) {
			setValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_AUTHOR, null);
		}
		else {
			setValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_AUTHOR, value.getValue(de.isnow.stypesafe.jooq.tables.Author.AUTHOR.ID));
		}
	}

	/**
	 * The table column <code>stypesafe.fragmentXversion.fk_author</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT author
	 * FOREIGN KEY (fk_author)
	 * REFERENCES stypesafe.author (id)
	 * </pre></code>
	 */
	public de.isnow.stypesafe.jooq.tables.records.AuthorRecord fetchAuthor() {
		return create()
			.selectFrom(de.isnow.stypesafe.jooq.tables.Author.AUTHOR)
			.where(de.isnow.stypesafe.jooq.tables.Author.AUTHOR.ID.equal(getValue(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION.FK_AUTHOR)))
			.fetchOne();
	}

	/**
	 * Create a detached FragmentxversionRecord
	 */
	public FragmentxversionRecord() {
		super(de.isnow.stypesafe.jooq.tables.Fragmentxversion.FRAGMENTXVERSION);
	}
}

/**
 * This class is generated by jOOQ
 */
package de.isnow.stypesafe.jooq.tables.records;

import java.util.List;

import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.tools.unsigned.*;
import de.isnow.stypesafe.jooq.tables.Author;
import de.isnow.stypesafe.jooq.tables.Documentfragment;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.4.2"},
                            comments = "This class is generated by jOOQ")
public class AuthorRecord extends UpdatableRecordImpl<AuthorRecord> {

	private static final long serialVersionUID = -2023541780;

	/**
	 * The table column <code>stypesafe.author.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public void setId(UInteger value) {
		setValue(Author.AUTHOR.ID, value);
	}

	/**
	 * The table column <code>stypesafe.author.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public UInteger getId() {
		return getValue(Author.AUTHOR.ID);
	}

	/**
	 * The table column <code>stypesafe.author.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public List<DocumentfragmentRecord> fetchDocumentfragmentList() {
		return create()
			.selectFrom(Documentfragment.DOCUMENTFRAGMENT)
			.where(Documentfragment.DOCUMENTFRAGMENT.FK_AUTHOR.equal(getValue(Author.AUTHOR.ID)))
			.fetch();
	}

	/**
	 * The table column <code>stypesafe.author.stypiuid</code>
	 */
	public void setStypiuid(java.lang.String value) {
		setValue(Author.AUTHOR.STYPIUID, value);
	}

	/**
	 * The table column <code>stypesafe.author.stypiuid</code>
	 */
	public java.lang.String getStypiuid() {
		return getValue(Author.AUTHOR.STYPIUID);
	}

	/**
	 * The table column <code>stypesafe.author.username</code>
	 */
	public void setUsername(java.lang.String value) {
		setValue(Author.AUTHOR.USERNAME, value);
	}

	/**
	 * The table column <code>stypesafe.author.username</code>
	 */
	public java.lang.String getUsername() {
		return getValue(Author.AUTHOR.USERNAME);
	}

	/**
	 * Create a detached AuthorRecord
	 */
	public AuthorRecord() {
		super(Author.AUTHOR);
	}
}

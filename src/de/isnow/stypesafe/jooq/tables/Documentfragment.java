/**
 * This class is generated by jOOQ
 */
package de.isnow.stypesafe.jooq.tables;

import java.util.Arrays;
import java.util.List;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.UpdatableTableImpl;
import org.jooq.tools.unsigned.UInteger;

import de.isnow.stypesafe.jooq.tables.records.DocumentfragmentRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.4.2"},
                            comments = "This class is generated by jOOQ")
public class Documentfragment extends UpdatableTableImpl<DocumentfragmentRecord> {

	private static final long serialVersionUID = 315262022;

	/**
	 * The singleton instance of stypesafe.documentfragment
	 */
	public static final Documentfragment DOCUMENTFRAGMENT = new Documentfragment();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DocumentfragmentRecord> getRecordType() {
		return DocumentfragmentRecord.class;
	}

	/**
	 * The table column <code>stypesafe.documentfragment.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public final TableField<DocumentfragmentRecord, UInteger> ID = createField("id", SQLDataType.INTEGERUNSIGNED, this);

	/**
	 * The table column <code>stypesafe.documentfragment.text</code>
	 */
	public final TableField<DocumentfragmentRecord, String> TEXT = createField("text", SQLDataType.CLOB, this);

	/**
	 * The table column <code>stypesafe.documentfragment.fk_version</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT fragment_version
	 * FOREIGN KEY (fk_version)
	 * REFERENCES stypesafe.documentversion (id)
	 * </pre></code>
	 */
	public final TableField<DocumentfragmentRecord, UInteger> FK_VERSION = createField("fk_version", SQLDataType.INTEGERUNSIGNED, this);

	/**
	 * The table column <code>stypesafe.documentfragment.fk_author</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT fragment_author
	 * FOREIGN KEY (fk_author)
	 * REFERENCES stypesafe.author (id)
	 * </pre></code>
	 */
	public final TableField<DocumentfragmentRecord, UInteger> FK_AUTHOR = createField("fk_author", SQLDataType.INTEGERUNSIGNED, this);

	public Documentfragment() {
		super("documentfragment", de.isnow.stypesafe.jooq.Stypesafe.STYPESAFE);
	}

	public Documentfragment(String alias) {
		super(alias, de.isnow.stypesafe.jooq.Stypesafe.STYPESAFE, Documentfragment.DOCUMENTFRAGMENT);
	}

	@Override
	public Identity<DocumentfragmentRecord, UInteger> getIdentity() {
		return de.isnow.stypesafe.jooq.Keys.IDENTITY_DOCUMENTFRAGMENT;
	}

	@Override
	public UniqueKey<DocumentfragmentRecord> getMainKey() {
		return de.isnow.stypesafe.jooq.Keys.KEY_DOCUMENTFRAGMENT_PRIMARY;
	}

	@Override
	@SuppressWarnings("unchecked")
	public List<UniqueKey<DocumentfragmentRecord>> getKeys() {
		return Arrays.<UniqueKey<DocumentfragmentRecord>>asList(de.isnow.stypesafe.jooq.Keys.KEY_DOCUMENTFRAGMENT_PRIMARY);
	}

	@Override
	@SuppressWarnings("unchecked")
	public List<ForeignKey<DocumentfragmentRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<DocumentfragmentRecord, ?>>asList(de.isnow.stypesafe.jooq.Keys.FRAGMENT_VERSION, de.isnow.stypesafe.jooq.Keys.FRAGMENT_AUTHOR);
	}

	@Override
	public Documentfragment as(String alias) {
		return new Documentfragment(alias);
	}
}

/**
 * This class is generated by jOOQ
 */
package de.isnow.stypesafe.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.5.1"},
                            comments = "This class is generated by jOOQ")
public class Documentversion extends org.jooq.impl.UpdatableTableImpl<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord> {

	private static final long serialVersionUID = -576467518;

	/**
	 * The singleton instance of stypesafe.documentversion
	 */
	public static final de.isnow.stypesafe.jooq.tables.Documentversion DOCUMENTVERSION = new de.isnow.stypesafe.jooq.tables.Documentversion();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord> getRecordType() {
		return de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord.class;
	}

	/**
	 * The table column <code>stypesafe.documentversion.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public final org.jooq.TableField<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord, org.jooq.tools.unsigned.UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this);

	/**
	 * The table column <code>stypesafe.documentversion.fk_document</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT document_version
	 * FOREIGN KEY (fk_document)
	 * REFERENCES stypesafe.document (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord, org.jooq.tools.unsigned.UInteger> FK_DOCUMENT = createField("fk_document", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this);

	/**
	 * The table column <code>stypesafe.documentversion.version</code>
	 */
	public final org.jooq.TableField<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord, org.jooq.tools.unsigned.UInteger> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this);

	/**
	 * The table column <code>stypesafe.documentversion.timestamp</code>
	 */
	public final org.jooq.TableField<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord, java.sql.Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The table column <code>stypesafe.documentversion.fingerprint</code>
	 */
	public final org.jooq.TableField<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord, java.lang.String> FINGERPRINT = createField("fingerprint", org.jooq.impl.SQLDataType.VARCHAR, this);

	public Documentversion() {
		super("documentversion", de.isnow.stypesafe.jooq.Stypesafe.STYPESAFE);
	}

	public Documentversion(java.lang.String alias) {
		super(alias, de.isnow.stypesafe.jooq.Stypesafe.STYPESAFE, de.isnow.stypesafe.jooq.tables.Documentversion.DOCUMENTVERSION);
	}

	@Override
	public org.jooq.Identity<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord, org.jooq.tools.unsigned.UInteger> getIdentity() {
		return de.isnow.stypesafe.jooq.Keys.IDENTITY_DOCUMENTVERSION;
	}

	@Override
	public org.jooq.UniqueKey<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord> getMainKey() {
		return de.isnow.stypesafe.jooq.Keys.KEY_DOCUMENTVERSION_PRIMARY;
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.UniqueKey<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord>>asList(de.isnow.stypesafe.jooq.Keys.KEY_DOCUMENTVERSION_PRIMARY);
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.ForeignKey<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<de.isnow.stypesafe.jooq.tables.records.DocumentversionRecord, ?>>asList(de.isnow.stypesafe.jooq.Keys.DOCUMENT_VERSION);
	}

	@Override
	public de.isnow.stypesafe.jooq.tables.Documentversion as(java.lang.String alias) {
		return new de.isnow.stypesafe.jooq.tables.Documentversion(alias);
	}
}

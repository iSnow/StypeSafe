/**
 * This class is generated by jOOQ
 */
package de.isnow.stypesafe.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.5.1"},
                            comments = "This class is generated by jOOQ")
public class Document extends org.jooq.impl.UpdatableTableImpl<de.isnow.stypesafe.jooq.tables.records.DocumentRecord> {

	private static final long serialVersionUID = -174608315;

	/**
	 * The singleton instance of stypesafe.document
	 */
	public static final de.isnow.stypesafe.jooq.tables.Document DOCUMENT = new de.isnow.stypesafe.jooq.tables.Document();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<de.isnow.stypesafe.jooq.tables.records.DocumentRecord> getRecordType() {
		return de.isnow.stypesafe.jooq.tables.records.DocumentRecord.class;
	}

	/**
	 * The table column <code>stypesafe.document.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public final org.jooq.TableField<de.isnow.stypesafe.jooq.tables.records.DocumentRecord, org.jooq.tools.unsigned.UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this);

	/**
	 * The table column <code>stypesafe.document.stypiuid</code>
	 */
	public final org.jooq.TableField<de.isnow.stypesafe.jooq.tables.records.DocumentRecord, java.lang.String> STYPIUID = createField("stypiuid", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>stypesafe.document.url</code>
	 */
	public final org.jooq.TableField<de.isnow.stypesafe.jooq.tables.records.DocumentRecord, java.lang.String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>stypesafe.document.title</code>
	 */
	public final org.jooq.TableField<de.isnow.stypesafe.jooq.tables.records.DocumentRecord, java.lang.String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>stypesafe.document.before_rename</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT document_history
	 * FOREIGN KEY (before_rename)
	 * REFERENCES stypesafe.document (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<de.isnow.stypesafe.jooq.tables.records.DocumentRecord, org.jooq.tools.unsigned.UInteger> BEFORE_RENAME = createField("before_rename", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this);

	public Document() {
		super("document", de.isnow.stypesafe.jooq.Stypesafe.STYPESAFE);
	}

	public Document(java.lang.String alias) {
		super(alias, de.isnow.stypesafe.jooq.Stypesafe.STYPESAFE, de.isnow.stypesafe.jooq.tables.Document.DOCUMENT);
	}

	@Override
	public org.jooq.Identity<de.isnow.stypesafe.jooq.tables.records.DocumentRecord, org.jooq.tools.unsigned.UInteger> getIdentity() {
		return de.isnow.stypesafe.jooq.Keys.IDENTITY_DOCUMENT;
	}

	@Override
	public org.jooq.UniqueKey<de.isnow.stypesafe.jooq.tables.records.DocumentRecord> getMainKey() {
		return de.isnow.stypesafe.jooq.Keys.KEY_DOCUMENT_PRIMARY;
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.UniqueKey<de.isnow.stypesafe.jooq.tables.records.DocumentRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<de.isnow.stypesafe.jooq.tables.records.DocumentRecord>>asList(de.isnow.stypesafe.jooq.Keys.KEY_DOCUMENT_PRIMARY);
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.ForeignKey<de.isnow.stypesafe.jooq.tables.records.DocumentRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<de.isnow.stypesafe.jooq.tables.records.DocumentRecord, ?>>asList(de.isnow.stypesafe.jooq.Keys.DOCUMENT_HISTORY);
	}

	@Override
	public de.isnow.stypesafe.jooq.tables.Document as(java.lang.String alias) {
		return new de.isnow.stypesafe.jooq.tables.Document(alias);
	}
}
